- yarn add sucrase -D (Em desenvolvimento);
- nodemon.json , faz o mapeamento para o nodemon na package.json;
- yarn add eslint -D; yarn eslint --init, serão feitas perguntas sobre o projeto;
- \*\* Sequelize

- yarn sequelize db:migrate
- yarn sequelize migration:create --name=create-customers
- yarn sequelize migration:create --name=remove-customers
- yarn sequelize db:migrate:undo:all

  \*\*\* Postgres

  - Não tem suporte nativo para ENUMs, ao remover uma, o TYPE criado no Postgres, permanece, caso seja feito a criação novamente do ENUM
    irá retornar um erro de que o ENUM já existe.
    @SOLUÇÃO - LIB: sequelize-replace-enum-postgres.

lib: date-fns
=> Para criar objetos do tipo Date.

lib: yup
=> Para validar os campos da requisição com as tabelas, ex: criar um objeto com 'name' obrigatório, porém não passar o nome.
Exemplo: Criado no CustomersController, para validar o 'create' e obdecer aos required!

lib: bcrypt.js
=> Utilizado para criar hashs de password.

lib: jsonwebtoken (jwt)
=> Utilizado para criar o token de autenticação.
:: jwt.sign({id}, "HASH", { expiresIn: "7d"})
https://www.md5hashgenerator.com/ <== Para criar a HASH
\*\* Colocar no "Header" o value: "Authorization" "Bearer HASH"

lib: Multer
=> Lib para upload de arquivos

{ extname, resolve } from "path"
=> Ajuda no path do arquivo: resolve(\_\_disname, "..", "..", "tmp", "uploads"), // Onde cada ".." sobe um nível de pasta.

lib: NodeMailer
=> Utilizado para envio de e-mail.

lib: Bee-Queue
=> Usado para background jobs (Queues), filas de serviço.

lib: dotenv
=> Facilitar criação de variáveis de ambiente.

lib: express-async-erros
=> Permite que os erros sejam recuperados dentro da aplicação.

lib: Youch
=> Utilizada para um melhor tratamento de erros.
